{"version":3,"file":"static/js/211.23ce6caf.chunk.js","mappings":"+QAEaA,EAAOC,EAAAA,GAAAA,IAAH,gDAIJC,EAASD,EAAAA,GAAAA,OAAH,oUAqBNE,EAAOF,EAAAA,GAAAA,EAAH,+GAQJG,EAAQH,EAAAA,GAAAA,MAAH,kP,8GCnCLI,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAMtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAV,E,mBC4DjC,EA5DoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXL,GAAWM,EAAAA,EAAAA,IAAYR,GAwB7B,OACE,kBAAMS,SAvBa,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OAEbC,EAAa,CACjBC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,OAAQN,EAAKI,SAASE,OAAOD,OAG/B,GACEf,EAASiB,MACP,SAAAC,GAAO,OAAIA,EAAQL,KAAKM,gBAAkBP,EAAWC,KAAKM,aAAnD,IAGT,OAAOC,EAAAA,GAAAA,MAAA,UAAeR,EAAWC,KAA1B,4BAGTT,GAASiB,EAAAA,EAAAA,IAAYT,IACrBF,EAAKY,OACN,EAGC,WACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAM,UACN,4BACE,SAAC,KAAD,CACEC,KAAK,OACLV,KAAK,OACLW,YAAY,uBACZC,QAAQ,2HACRC,MAAM,wIACNC,UAAQ,UAId,UAAC,KAAD,YACE,SAAC,KAAD,UAAM,YACN,4BACE,SAAC,KAAD,CACEJ,KAAK,MACLV,KAAK,SACLW,YAAY,yBACZC,QAAQ,qGACRC,MAAM,+FACNC,UAAQ,UAKd,SAAC,KAAD,CAAQJ,KAAK,SAAb,SAAsB,kBAG3B,E,mBC9DYK,EAAOlC,EAAAA,GAAAA,KAAH,6HAQJmC,EAAOnC,EAAAA,GAAAA,GAAH,yCCWjB,EAfwB,SAAC,GAA0B,IAAxBoC,EAAuB,EAAvBA,GAAIjB,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAC7BZ,GAAWC,EAAAA,EAAAA,MAIjB,OACE,UAACuB,EAAD,YACE,UAACC,EAAD,WACGhB,EAAK,KAAGG,MAEX,SAAC,KAAD,CAAQe,QAPS,kBAAM3B,GAAS4B,EAAAA,EAAAA,IAAe,CAAEF,GAAAA,EAAIjB,KAAAA,IAApC,EAOjB,SAA+B,aAGpC,E,UCUD,EAtBoB,WAClB,IAAMb,GAAWM,EAAAA,EAAAA,IAAYR,GACvBK,GAASG,EAAAA,EAAAA,IAAYJ,GACrB+B,EAAoBjC,EAASG,QAAO,SAAAe,GAAO,OAC/CA,EAAQL,KAAKM,cAAce,SAAS/B,EAAOgB,cADI,IAG3Cf,GAAWC,EAAAA,EAAAA,MAMjB,OAJA8B,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,KAGF,wBACG6B,GACCA,EAAkBI,KAAI,gBAAGP,EAAH,EAAGA,GAAIjB,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OACpB,SAAC,EAAD,CAA0Bc,GAAIA,EAAIjB,KAAMA,EAAMG,OAAQA,GAAhCc,EADF,KAK7B,E,UCMD,EA5Be,WACb,IAAM3B,GAASG,EAAAA,EAAAA,IAAYJ,GAErBE,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,SAAC,KAAD,UAAM,2BACN,4BACE,SAAC,KAAD,CACEiC,SATa,SAAA9B,GACnBJ,GAASmC,EAAAA,EAAAA,IAAc/B,EAAMG,OAAOI,OACrC,EAQOA,MAAOZ,EACPoB,KAAK,OACLV,KAAK,SACLW,YAAY,uBACZC,QAAQ,eACRC,MAAM,wIACNC,UAAQ,QAKjB,EC7BYlC,EAAOC,EAAAA,GAAAA,IAAH,gDAIJ8C,EAAQ9C,EAAAA,GAAAA,GAAH,sHCIlB,EAPgB,SAAC,GAAyB,IAAvBgC,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACxB,OACE,UAAChD,EAAD,YACE,SAAC+C,EAAD,UAAQd,IAAc,IAAEe,IAG7B,ECYD,EAhBiB,WACf,OACE,iCACE,SAAC,EAAD,CAASf,MAAM,YAAf,UACE,SAAC,EAAD,OAGF,UAAC,EAAD,CAASA,MAAM,WAAf,WACE,SAAC,EAAD,KAEA,SAAC,EAAD,SAIP,C","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 25px;\n  padding: 4px 8px;\n\n  font-style: normal;\n  font-size: 12px;\n  line-height: 1;\n  letter-spacing: 0.04em;\n\n  border: 1px solid black;\n  border-radius: 4px;\n\n  color: black;\n  background-color: white;\n\n  &:hover {\n    background-color: orangered;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.02em;\n\n  color: black;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding-left: 16px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  width: 200px;\n  height: 20px;\n\n  color: black;\n  font-size: 16px;\n\n  border-radius: 4px;\n  background-color: transparent;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import { toast } from 'react-hot-toast';\nimport { Button, Input, Text, Wrap } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      return toast.error(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContacts(newContact));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Wrap>\n        <Text>Name</Text>\n        <label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter a contact name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n      </Wrap>\n      <Wrap>\n        <Text>Number</Text>\n        <label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter a contact number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </Wrap>\n\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Span = styled.span`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  width: 200px;\n`;\n","import PropTypes from 'prop-types';\nimport { Button } from 'components/ContactForm/ContactForm.styled';\nimport { Item, Span } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContacts({ id, name }));\n\n  return (\n    <Span>\n      <Item>\n        {name}: {number}\n      </Item>\n      <Button onClick={handleDelete}>Delete</Button>\n    </Span>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const getFilterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {getFilterContacts &&\n        getFilterContacts.map(({ id, name, number }) => (\n          <ContactListItem key={id} id={id} name={name} number={number} />\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Input, Text } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(filterContact(event.target.value));\n  };\n\n  return (\n    <>\n      <Text>Find contacts by name</Text>\n      <label>\n        <Input\n          onChange={handleChange}\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter a contact name\"\n          pattern=\"[A-Za-z0-9]+\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  line-height: 1.2;\n  letter-spacing: 0.02em;\n\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrap } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Wrap>\n      <Title>{title}</Title> {children}\n    </Wrap>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Wrap","styled","Button","Text","Input","selectContacts","state","contacts","items","selectFilter","filter","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","newContact","name","elements","value","number","find","contact","toLowerCase","toast","addContacts","reset","type","placeholder","pattern","title","required","Span","Item","id","onClick","deleteContacts","getFilterContacts","includes","useEffect","fetchContacts","map","onChange","filterContact","Title","children"],"sourceRoot":""}